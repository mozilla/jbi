name: Build and Publish Docker image

on:
  pull_request

  push:
    branches:
    - main
    tags:
    - v[0-9]+.[0-9]+.[0-9]+

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      FULL_IMAGE_TAG: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Set Tag
        id: tag
        run: |
          export CI_COMMIT_SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
          echo $CI_COMMIT_SHORT_SHA;
          echo ${GITHUB_REF##*/};
          echo $version_pattern;
          if [[ ${GITHUB_REF} =~ $version_pattern ]]; then
            echo "::set-output name=tag::${GITHUB_REF##*/}"
          else
            echo "::set-output name=tag::${GITHUB_REF##*/}-$CI_COMMIT_SHORT_SHA"
          fi
        env:
          version_pattern: "tags\\/v[0-9]+\\.[0-9]+\\.[0-9]+"
  build:
    runs-on: ubuntu-latest
    needs: prepare
    environment:
        name: cloudops
    outputs:
      BUILD_TAG: ${{ steps.build.outputs.build-tag }}

    steps:
      - name: Echo tag
        id: echotag
        env:
          IMAGE_TAG: ${{ needs.prepare.outputs.FULL_IMAGE_TAG }}
        run: |
          echo "Building an image with the following tag:"
          echo $IMAGE_TAG

      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: $GITHUB_REPOSITORY

      - name: Build Docker image
        id: build
        env:
          IMAGE_TAG: ${{ needs.prepare.outputs.FULL_IMAGE_TAG }}
        run: |
          printf '{\n    "commit": "%s",\n    "version": "%s",\n    "image_tag": "%s",\n    "source": "%s",\n    "build": "%s"\n}\n' \
            "$GITHUB_SHA" \
            "$GITHUB_REF" \
            "$IMAGE_TAG" \
            "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" \
            "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" > ./version.json
          docker build --file Dockerfile -t $GITHUB_REPOSITORY:$IMAGE_TAG .
          docker image tag $GITHUB_REPOSITORY:$IMAGE_TAG $GITHUB_REPOSITORY:latest

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !github.event.pull_request }} # Exclude pull-requests (see `on:` above)

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        id: push
        env:
          IMAGE_TAG: ${{ needs.prepare.outputs.FULL_IMAGE_TAG }}
        run: |
          docker push $GITHUB_REPOSITORY:$IMAGE_TAG
          docker push $GITHUB_REPOSITORY:latest
