name: Build and Deploy Docker image

on: pull_request

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      FULL_IMAGE_TAG: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Set Tag
        id: tag
        run: |
          export CI_COMMIT_SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)
          echo $CI_COMMIT_SHORT_SHA;
          echo ${GITHUB_REF##*/};
          echo $version_pattern;
          if [[ ${GITHUB_REF} =~ $version_pattern ]]; then
            echo "::set-output name=tag::${GITHUB_REF##*/}"
          elif [ ${GITHUB_REF##*/} = "main" ]; then
            echo "::set-output name=tag::stg-$CI_COMMIT_SHORT_SHA"
          else
            echo "::set-output name=tag::$CI_COMMIT_SHORT_SHA"
          fi
        env:
          version_pattern: "tags\\/v[0-9]+\\.[0-9]+\\.[0-9]+"
  build-image:
    runs-on: ubuntu-latest
    needs: prepare
    environment:
        name: dev
    outputs:
      BUILD_TAG: ${{ steps.build-push.outputs.build-tag }}

    steps:
      - name: Echo tag
        id: echotag
        env:
          IMAGE_TAG: ${{ needs.prepare.outputs.FULL_IMAGE_TAG }}
        run: |
          echo "Building an image with the following tag:"
          echo $IMAGE_TAG

      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Build and push to GCR
        id: build-push
        env:
          GCR_REGISTRY: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}/${{ secrets.GCP_GCR_REPO }}
          IMAGE_TAG: ${{ needs.prepare.outputs.FULL_IMAGE_TAG }}
        run: |
          printf '{\n    "commit": "%s",\n    "version": "%s",\n    "image_tag": "%s",\n    "source": "%s",\n    "build": "%s"\n}\n' \
            "$GITHUB_SHA" \
            "$GITHUB_REF" \
            "$IMAGE_TAG" \
            "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" \
            "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" > ./version.json
          docker build --file infra/Dockerfile -t $GCR_REGISTRY:$IMAGE_TAG .
          docker image tag $GCR_REGISTRY:$IMAGE_TAG $GCR_REGISTRY:latest
          docker push $GCR_REGISTRY:$IMAGE_TAG
          docker push $GCR_REGISTRY:latest
          echo "::set-output name=build-tag::$IMAGE_TAG"
          echo "::debug::Set the build-tag output as $IMAGE_TAG"

  deploy-image:
    runs-on: ubuntu-latest
    needs: build-image
    environment:
      name: dev

    steps:
      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ secrets.GCP_APP_NAME }}
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}/${{ secrets.GCP_GCR_REPO }}:${{ needs.build-image.outputs.BUILD_TAG }}
          region: ${{ secrets.GCP_REGION }}
          secrets: |
            JIRA_PASSWORD=JIRA_PASSWORD:latest
            JIRA_USERNAME=JIRA_USERNAME:latest
            BUGZILLA_API_KEY=BUGZILLA_API_KEY:latest
